/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_pjsua2_WRAP_H_
#define SWIG_pjsua2_WRAP_H_

class SwigDirector_AudioMediaPlayer : public pj::AudioMediaPlayer, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_AudioMediaPlayer(JNIEnv *jenv);
    virtual ~SwigDirector_AudioMediaPlayer();
    virtual void onEof2();
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_Buddy : public pj::Buddy, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Buddy(JNIEnv *jenv);
    virtual ~SwigDirector_Buddy();
    virtual void onBuddyState();
    virtual void onBuddyEvSubState(pj::OnBuddyEvSubStateParam &prm);
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<2> swig_override;
};

class SwigDirector_FindBuddyMatch : public pj::FindBuddyMatch, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_FindBuddyMatch(JNIEnv *jenv);
    virtual bool match(pj::string const &token, pj::Buddy const &buddy);
    virtual ~SwigDirector_FindBuddyMatch();
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_Account : public pj::Account, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Account(JNIEnv *jenv);
    virtual ~SwigDirector_Account();
    virtual void onIncomingCall(pj::OnIncomingCallParam &prm);
    virtual void onRegStarted(pj::OnRegStartedParam &prm);
    virtual void onRegState(pj::OnRegStateParam &prm);
    virtual void onIncomingSubscribe(pj::OnIncomingSubscribeParam &prm);
    virtual void onInstantMessage(pj::OnInstantMessageParam &prm);
    virtual void onInstantMessageStatus(pj::OnInstantMessageStatusParam &prm);
    virtual void onTypingIndication(pj::OnTypingIndicationParam &prm);
    virtual void onMwiInfo(pj::OnMwiInfoParam &prm);
public:
    bool swig_overrides(int n) {
      return (n < 8 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<8> swig_override;
};

class SwigDirector_Call : public pj::Call, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Call(JNIEnv *jenv, pj::Account &acc, int call_id = PJSUA_INVALID_ID);
    virtual ~SwigDirector_Call();
    virtual void onCallState(pj::OnCallStateParam &prm);
    virtual void onCallTsxState(pj::OnCallTsxStateParam &prm);
    virtual void onCallMediaState(pj::OnCallMediaStateParam &prm);
    virtual void onCallSdpCreated(pj::OnCallSdpCreatedParam &prm);
    virtual void onStreamCreated(pj::OnStreamCreatedParam &prm);
    virtual void onStreamDestroyed(pj::OnStreamDestroyedParam &prm);
    virtual void onDtmfDigit(pj::OnDtmfDigitParam &prm);
    virtual void onCallTransferRequest(pj::OnCallTransferRequestParam &prm);
    virtual void onCallTransferStatus(pj::OnCallTransferStatusParam &prm);
    virtual void onCallReplaceRequest(pj::OnCallReplaceRequestParam &prm);
    virtual void onCallReplaced(pj::OnCallReplacedParam &prm);
    virtual void onCallRxOffer(pj::OnCallRxOfferParam &prm);
    virtual void onCallRxReinvite(pj::OnCallRxReinviteParam &prm);
    virtual void onCallTxOffer(pj::OnCallTxOfferParam &prm);
    virtual void onInstantMessage(pj::OnInstantMessageParam &prm);
    virtual void onInstantMessageStatus(pj::OnInstantMessageStatusParam &prm);
    virtual void onTypingIndication(pj::OnTypingIndicationParam &prm);
    virtual pjsip_redirect_op onCallRedirected(pj::OnCallRedirectedParam &prm);
    virtual void onCallMediaTransportState(pj::OnCallMediaTransportStateParam &prm);
    virtual void onCallMediaEvent(pj::OnCallMediaEventParam &prm);
    virtual void onCreateMediaTransport(pj::OnCreateMediaTransportParam &prm);
    virtual void onCreateMediaTransportSrtp(pj::OnCreateMediaTransportSrtpParam &prm);
public:
    bool swig_overrides(int n) {
      return (n < 22 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<22> swig_override;
};

class SwigDirector_LogWriter : public pj::LogWriter, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_LogWriter(JNIEnv *jenv);
    virtual ~SwigDirector_LogWriter();
    virtual void write(pj::LogEntry const &entry);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_Endpoint : public pj::Endpoint, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Endpoint(JNIEnv *jenv);
    virtual ~SwigDirector_Endpoint();
    virtual void onNatDetectionComplete(pj::OnNatDetectionCompleteParam const &prm);
    virtual void onNatCheckStunServersComplete(pj::OnNatCheckStunServersCompleteParam const &prm);
    virtual void onTransportState(pj::OnTransportStateParam const &prm);
    virtual void onTimer(pj::OnTimerParam const &prm);
    virtual void onSelectAccount(pj::OnSelectAccountParam &prm);
    virtual void onIpChangeProgress(pj::OnIpChangeProgressParam &prm);
    virtual void onMediaEvent(pj::OnMediaEventParam &prm);
public:
    bool swig_overrides(int n) {
      return (n < 7 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<7> swig_override;
};


#endif
